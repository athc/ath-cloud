buildscript {
  ext {
    kotlinVersion = '1.2.41'
    springBootVersion = '2.0.3.RELEASE'
  }
  repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "https://jitpack.io" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
  }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.gitee'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "1.8"
  }
}

repositories {
  mavenLocal()
  maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
  mavenCentral()
  maven { url "https://repo.spring.io/plugins-release" }
  maven { url "https://jitpack.io" }
}


subprojects {
  apply plugin: 'kotlin'
  apply plugin: 'maven'

  jar { enabled = true }
  bootJar { enabled = false }

  ext {
    kotlinVersion = '1.2.41'
    springBootVersion = '2.0.3.RELEASE'
    spec_version = '1.1.1'
    jpa_version='2.0.1.RELEASE'
  }

  repositories {
    mavenCentral()
  }

  compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
  }
  compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
  }

  dependencies {
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
  }


  repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "https://jitpack.io" }
  }
}

